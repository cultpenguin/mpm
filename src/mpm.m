% Generated by f77toM v0.34 [(c) 1998] from original F77 file: mpm.f

%       program mpm
disp('*** What is this (quotes deleted)?       program mpm');
%      
% CONVENTION AFTER LEVANDER, GEOPHYSICS 1988 
% (See Fig.1 and Fig.2)
%
% l : lambda
% l2mu : lambda + 2 mu
% mu : mu
% denu : Density [nx,nz]
% denv : density [nx-1,nz-1]
%
%
% 
%

% INCLUDE file name: mpm.inc; contents follow:
% INCLUDE file name: mpm.inc; contents end.

%---------------------------------------------------------------
% SETUP VARIABLES
%---------------------------------------------------------------
%     MODEL
global dx;


global bignx;
global bignz;


global bx1;
global bz1;


global bbx1;
global bbz1;


%     MOVING BOX
global nx;
global nz;


global buffer;


global movflag;


global boxx0;
global boxz0;


global boxvpx;
global boxvpz;


global wavex;
global wavez;
% Original declaration as: wavex(ntmax)
wavex = zeros(ntmax-1+1,1);% Original declaration as: wavez(ntmax)
wavez = zeros(ntmax-1+1,1);

global mu;
% Original declaration as: mu(nxmax,nzmax)
mu = zeros(nxmax-1+1,nzmax-1+1);

global l;
global l2mu;
% Original declaration as: l(nxmax,nzmax)
l = zeros(nxmax-1+1,nzmax-1+1);% Original declaration as: l2mu(nxmax,nzmax)
l2mu = zeros(nxmax-1+1,nzmax-1+1);

global denu;
global denw;
% Original declaration as: denu(nxmax,nzmax)
denu = zeros(nxmax-1+1,nzmax-1+1);% Original declaration as: denw(nxmax,nzmax)
denw = zeros(nxmax-1+1,nzmax-1+1);

global ut;
global wt;
% Original declaration as: ut(nxmax,nzmax)
ut = zeros(nxmax-1+1,nzmax-1+1);% Original declaration as: wt(nxmax,nzmax)
wt = zeros(nxmax-1+1,nzmax-1+1);

global tauxx;
global tauzz;
% Original declaration as: tauxx(nxmax,nzmax)
tauxx = zeros(nxmax-1+1,nzmax-1+1);% Original declaration as: tauzz(nxmax,nzmax)
tauzz = zeros(nxmax-1+1,nzmax-1+1);

global tauxz;
% Original declaration as: tauxz(nxmax,nzmax)
tauxz = zeros(nxmax-1+1,nzmax-1+1);

%     TIME SAMPLING
global nt;


global dt;


%     SOURCE
global xs;
global zs;


global sourcetype;


global sumsource;


global maxf;


global pulsedelay;


global source;
% Original declaration as: source(ntmax)
source = zeros(ntmax-1+1,1);

%     BOUNDARIES
global freeupper;


global absmode;


global edgefactord;


global dampingwidth;
global dampingexponent;
global dampingtype;


global izfree;


global edgefactorf;
global vdamp;
global maxfdamp;
global expbase;


global dampf;
% Original declaration as: dampf(nzmax)
dampf = zeros(nzmax-1+1,1);

%     AUTOSAVE
global restoreautosave;
global dautosave;


%     IO
global usnapflag;
global wsnapflag;
global divsnapflag;
global rotsnapflag;


global snapsize;


global beginsnap;
global dsnap;


global xyskip;


global geotype;


global geodepth;


global tskip;


global verbose;


global geou;
global geow;
% Original declaration as: geou(nreceivers)
geou = zeros(nreceivers-1+1,1);% Original declaration as: geow(nreceivers)
geow = zeros(nreceivers-1+1,1);

%     COUNTERS
global ix;
global iz;
global it;


%       character*8 ctime
disp('*** What is this (quotes deleted)?       character*8 ctime');
global tstart;
global tstop;


global iotime;
global iotimeout;


global mpmtime;
global tmpm1;
global tmpm2;


global thour;
global tmin;
global tsec;


global zfree;


global it1;


%     CONSTANTS
global c1;
global c2;


% Edit of assignment: >      c1=9./8.
c1 = 9.0/8.0;
% Edit of assignment: >      c2=1./24.
c2 = 1.0/24.0;
% Edit of assignment: >      iotime=0.
iotime = 0.0;
% Edit of assignment: >      mpmtime=0.
mpmtime = 0.0;
%---------------------------------------------------------------
% READ mpm.par, l2mu.bin, mu.bin, l.bin, denu.bin, denv.bin
%---------------------------------------------------------------
     [bignx,bignz,dx,nx,nz,buffer,movflag,boxx0,boxz0,boxvpx,boxvpz,nt,dt,xs,zs,sourcetype,maxf,pulsedelay,freeupper,absmode,edgefactord,dampingwidth,dampingexponent,izfree,dampingtype,edgefactorf,vdamp,maxfdamp,expbase,usnapflag,wsnapflag,divsnapflag,rotsnapflag,snapsize,beginsnap,dsnap,xyskip,geotype,geodepth,tskip,restoreautosave,dautosave,verbose,sumsource] = read_mpmpar(bignx,bignz,dx,nx,nz,buffer,movflag,boxx0,boxz0,boxvpx,boxvpz,nt,dt,xs,zs,sourcetype,maxf,pulsedelay,freeupper,absmode,edgefactord,dampingwidth,dampingexponent,izfree,dampingtype,edgefactorf,vdamp,maxfdamp,expbase,usnapflag,wsnapflag,divsnapflag,rotsnapflag,snapsize,beginsnap,dsnap,xyskip,geotype,geodepth,tskip,restoreautosave,dautosave,verbose,sumsource);
%---------------------------------------------------------------
%     CHECK ARRAYS
%---------------------------------------------------------------
     [bignx,bignz,dx,dt,nx,nz,nt,buffer,l,l2mu,mu,denu,denw,geodepth,freeupper,xs,zs] = checkarray(bignx,bignz,dx,dt,nx,nz,nt,buffer,l,l2mu,mu,denu,denw,geodepth,freeupper,xs,zs);
%---------------------------------------------------------------
% READ WAVEPOS
%---------------------------------------------------------------
     [nx,nz,buffer,bignx,bignz,movflag,1boxx0,boxz0,boxvpx,boxvpz,nt,dt,dx,wavex,wavez,verbose] = read_wavepos(nx,nz,buffer,bignx,bignz,movflag,1boxx0,boxz0,boxvpx,boxvpz,nt,dt,dx,wavex,wavez,verbose);
%---------------------------------------------------------------
% SETUP SOURCE
%---------------------------------------------------------------
     [dt,maxf,pulsedelay,sourcetype,sumsource,source,verbose] = sourcewl(dt,maxf,pulsedelay,sourcetype,sumsource,source,verbose);
%     CLEAR ARRAYS
% Edit of assignment: >      do ix=1,nx+buffer
doix = 1,nx+buffer;
% Edit of assignment: >         do iz=1,nz+buffer
doiz = 1,nz+buffer;
% Edit of assignment: >            tauxx(ix,iz)=0
tauxx(ix,iz)=0;
% Edit of assignment: >            tauzz(ix,iz)=0
tauzz(ix,iz)=0;
% Edit of assignment: >            tauxz(ix,iz)=0
tauxz(ix,iz)=0;
% Edit of assignment: >            ut(ix,iz)=0
ut(ix,iz)=0;
% Edit of assignment: >            wt(ix,iz)=0
wt(ix,iz)=0;
%---------------------------------------------------------------
% OPEN FILE HANDLES
%---------------------------------------------------------------
     [restoreautosave,bignx,bignz,geotype,xyskip,tskip,geou,geow,verbose,usnapflag,wsnapflag,divsnapflag,rotsnapflag,snapsize,beginsnap,dsnap] = mpm_filehandles(restoreautosave,bignx,bignz,geotype,xyskip,tskip,geou,geow,verbose,usnapflag,wsnapflag,divsnapflag,rotsnapflag,snapsize,beginsnap,dsnap);
%---------------------------------------------------------------
% START MODELING
%---------------------------------------------------------------
% Edit of assignment: >      tstart=secnds(tstart)
tstart = secnds(tstart);
     [ctime] = time(ctime);
% if clause begins here.
     if (verbose>-1)
